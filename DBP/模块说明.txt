此文档为"输出模块"的介绍文档
1.英文全称: outputer 模块前缀:OP_ 用户函数前缀 CTI_OP_
2.中文名称: 输出
3.此模块内部划分



>>>字符串内存管理部分(
功能:自动申请字符串所需空间
前缀 OP_MEM_
>>>字符串格式管理部分
功能:设置字符串颜色,位置
前缀:P_FORMAT_
=============================================SCREENBUFF结构=================================
typedef struct _SCREENBUFF
{
	int lenMem;	//内存大小
	int chMode;	//字符集
	char* pScreen;//screenbuff的首地址
	char* pScreenStart;
	char* pScreenEnd;
	//...
}CTI_SCREENBUFF;
为了完成颜色设置,需要建立一个数据结构 我称之为 地址颜色表
地址颜色表以地址为标记 保存颜色信息
地址颜色表是一个链表其内部结点的成员分别是 起始地址 终止地址 背景色 前景色
本模块提供的用户函数列表(开发过程中请随时添加):
>>>>>>>>>>>>>>>>>>>>>>>>>>输出到屏幕<<<<<<<<<<<<<<<<<<<<<
CTI_output						将设置好的screenbuf输出
>>>>>>>>>>>>>>>>>>>>>screen buffer 操作<<<<<<<<<<<<<<<<<
CTI_xyPtsb						在指定位置输出到screenbuff							ptsb = Print to screen buffer
CTI_ptsb						按光标位置输出到screenbuff
CTI_xyVerticalPtsb				竖向输出
CTI_sequencePtsb				按照坐标序列输出
CTI_barPtsb						在一个矩形范围内输出
CTI_closedSequencePtsb 			在序列组成的封闭图形内输出
>>>>>>>>>>>>>>>>>>>>>>>字符串工具<<<<<<<<<<<<<<<<<<<
CTI_getStrBetweenAddr  			提取两个地址之间的字符串
>>>>>>>>>>>>>>>>>>>>>>>>颜色设置<<<<<<<<<<<<<<<<<<<
CTI_setColorAll					设置screenbuffer内所有文本的颜色 = =估计用不到
CTI_setColorAfter 				从screenbuffer的某地址开始 设置以后的字符颜色
CTI_setColorBetweenAddr 		设置地址1和地址2之间的字符颜色
CTI_setColorBySequence  		按照坐标序列设置颜色
